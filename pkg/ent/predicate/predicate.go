/*
	MIT License

	Copyright (c) 2021 Justin Hammond

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.
*/

// Code generated by entc, DO NOT EDIT.

package predicate

import (
	"entgo.io/ent/dialect/sql"
)

// App is the predicate function for app builders.
type App func(*sql.Selector)

// Filter is the predicate function for filter builders.
type Filter func(*sql.Selector)

// FilterConfig is the predicate function for filterconfig builders.
type FilterConfig func(*sql.Selector)

// Group is the predicate function for group builders.
type Group func(*sql.Selector)

// Message is the predicate function for message builders.
type Message func(*sql.Selector)

// MsgVar is the predicate function for msgvar builders.
type MsgVar func(*sql.Selector)

// Tenant is the predicate function for tenant builders.
type Tenant func(*sql.Selector)

// TransportInstance is the predicate function for transportinstance builders.
type TransportInstance func(*sql.Selector)

// TransportRecipient is the predicate function for transportrecipient builders.
type TransportRecipient func(*sql.Selector)

// User is the predicate function for user builders.
type User func(*sql.Selector)

// UserMetaData is the predicate function for usermetadata builders.
type UserMetaData func(*sql.Selector)
